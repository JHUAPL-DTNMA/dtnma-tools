name: Build and run tests
on:
  schedule:
    - cron: '0 0 * * 0'
  push:
    branches:
      - main
      - 'apl-*'
  pull_request: {} # any target

jobs:
  unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Set up OS
        run: >
          sudo apt-get update && sudo apt-get install -y
          cmake ninja-build
          ruby build-essential autoconf libtool
          flex libfl-dev bison civetweb libcivetweb-dev libssl-dev libcjson-dev
          valgrind gcovr xmlstarlet
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
      - name: Prep
        run: ./deps.sh && ./prep.sh -DBUILD_DOCS=OFF
      - name: Build
        run: ./build.sh
      - name: Test
        run: ./build.sh check
      - name: Collect coverage
        run: ./build.sh coverage
      - name: Archive coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: build/default/coverage*
      - name: Report coverage
        run: |
          SRC_COV_PERC=$(xmlstarlet sel -t -v 'floor(/coverage/@line-rate * 100)' -n build/default/coverage-cace-xml.xml)
          echo "CACE coverage: ${SRC_COV_PERC}%" >> $GITHUB_STEP_SUMMARY
          SRC_COV_PERC=$(xmlstarlet sel -t -v 'floor(/coverage/@line-rate * 100)' -n build/default/coverage-refda-xml.xml)
          echo "REFDA coverage: ${SRC_COV_PERC}%" >> $GITHUB_STEP_SUMMARY

  agent-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Set up OS
        run: >
          sudo apt-get update && sudo apt-get install -y
          cmake ninja-build
          ruby build-essential autoconf libtool
          flex libfl-dev bison civetweb libcivetweb-dev libssl-dev libcjson-dev
          valgrind gcovr
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
      - name: Prep
        run: ./deps.sh && ./prep.sh -DBUILD_DOCS=OFF -DBUILD_TESTING=OFF
      - name: Build
        run: ./build.sh
      - name: Install
        run: ./build.sh install
      - name: Test Prep
        run: |
          sudo apt-get update && sudo apt-get install -y \
          python3 python3-pip
          pip3 install --upgrade pip
          pip3 install git+https://github.com/JHUAPL-DTNMA/dtnma-ace.git@apl-fy24-fix-decimal-fraction
          pip3 install -r agent-test/requirements.txt
          git clone --branch apl-fy24 https://github.com/JHUAPL-DTNMA/dtnma-adms.git agent-test/adms
      - name: Test
        run: python3 -m pytest agent-test --capture=no --log-cli-level=debug

  integration-test:
    if: false # FIXME re-enable when agent is ready
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up OS
        run: >
          sudo apt-get update && sudo apt-get install -y
          jq
      - name: Run
        run: ./testenv/start.sh
      - name: Test
        run: ./testenv/check.sh
      - name: Stop
        if: always()
        run: ./testenv/stop.sh
