name: Build and run tests
on:
  push:
    paths:
      - .github/workflows/build-test.yaml
      - deps/**
      - cmake/**
      - src/**
      - test/**
      - testenv/**
  pull_request:
    branches:
    - main

jobs:
  unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up OS
        run: >
          sudo apt-get update && sudo apt-get install -y
          cmake ninja-build
          ruby build-essential autoconf libtool
          flex bison civetweb libcivetweb-dev libssl-dev libcjson-dev
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
      - name: Prep
        run: ./deps.sh && ./prep.sh
      - name: Build
        run: ./build.sh
      - name: Test
        run: ./build.sh check

  agent-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up OS
        run: >
          sudo apt-get update && sudo apt-get install -y
          cmake ninja-build
          ruby build-essential autoconf libtool
          flex bison civetweb libcivetweb-dev libssl-dev libcjson-dev
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
      - name: Prep
        run: ./deps.sh && ./prep.sh
      - name: Build
        run: ./build.sh
      - name: Install
        run: ./build.sh install
      - name: Test Prep
        run: >
          sudo apt-get update && sudo apt-get install -y
          python3 python3-pip &&
          pip3 install --upgrade pip &&
          pip3 install -r agent-test/requirements.txt
      - name: Test
        run: python3 -m pytest agent-test --capture=no --log-cli-level=debug

  integration-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up OS
        run: >
          sudo apt-get update && sudo apt-get install -y
          jq
      - name: Run
        run: ./testenv/start.sh
      - name: Test
        run: ./testenv/check.sh
      - name: Stop
        if: always()
        run: ./testenv/stop.sh
